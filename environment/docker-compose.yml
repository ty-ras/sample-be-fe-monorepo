version: '3.8'

services:
  backend:
    build:
      context: "${TYRAS_ROOT_DIR}/environment"
      dockerfile: "${TYRAS_ROOT_DIR}/environment/Dockerfile.node"
      args:
        NODE_VERSION: ${TYRAS_NODE_VERSION_BE}
    ports:
      - 127.0.0.1:4001:4001
    volumes:
      - "${TYRAS_ROOT_DIR}/backend/:/tyras/code/:rw"
      - "${TYRAS_ROOT_DIR}/protocol/:/tyras/protocol/:ro"
      - "${TYRAS_ROOT_DIR}/environment/protocol/:/tyras/nodemon/protocol/:ro"
      - "${TYRAS_ROOT_DIR}/environment/backend/:/tyras/nodemon/code/:ro"
      # Libraries reference Git top-level tsconfig.json
      - "${TYRAS_ROOT_DIR}/tsconfig.json:/tyras/tsconfig.json:ro"
      # Installation necesseties
      - "${TYRAS_ROOT_DIR}/scripts/native-install.sh:/tyras/install.sh"
      - "${TYRAS_ROOT_DIR}/.eslintrc.library.cjs:/tyras/.eslintrc.library.cjs:ro"
      - "${TYRAS_ROOT_DIR}/tsconfig.library.json:/tyras/tsconfig.library.json:ro"
      - "${TYRAS_ROOT_DIR}/tsconfig.build.json:/tyras/tsconfig.build.json:ro"
    environment:
      # In deployment scenarios, this should be generated by the pipeline
      TYRAS_BE_CONFIG: |
        {
          "http": {
            "server": {
              "host": "0.0.0.0",
              "port": 4001
            },
            "cors": {
              "frontendAddress": "http://localhost:4002"
            }
          },
          "authentication": {
            "connection": {
              "host": "tyras-auth",
              "port": 3999,
              "scheme": "http"
            },
            "poolId": "local_abcdefgh",
            "clientId": "abcdefghijklmnopqrstuvwxy"
          },
          "database": {
            "host": "tyras-db",
            "port": 5432,
            "dbName": "tyras_db",
            "username": "tyras_be_login",
            "password": "tyras_be_login_pw",
            "role": "tyras_be"
          }
        }
    entrypoint:
      - sh
      - -c
      - |
        set -e

        cd /tyras
        export TYRAS_LIB_DIR=/tyras/code
        ./install.sh --cwd /tyras/code --frozen-lockfile
        cd /tyras/nodemon/protocol
        nodemon ${TYRAS_NODEMON_ARGS} &
        cd ../code
        # This is horrible hack, but I couldn't make it work any other way with TS-Node.
        # The problem is while TS-Node itself supports ESM modules, it does not support baseUrl:
        # https://typestrong.org/ts-node/docs/paths/
        # There is 'tsconfig-paths' package for that, unfortunately, it does not work well with ESM:
        # https://github.com/TypeStrong/ts-node/issues/1375#issuecomment-866751326
        # There is PR mentioned in https://github.com/dividab/tsconfig-paths/issues/122 which is supposed to add baseUrl support to ts-node.
        # However, it's been opened for over 1yr without much activity:
        # https://github.com/TypeStrong/ts-node/pull/1585
        # Therefore, we must fallback to other option: use CJS.
        # For that, we must use package.json without "type": "module" + custom tsconfig.
        cat '/tyras/code/package.json' | jq -M 'del(.type)' > '/tyras/code/src/package.json'
        nodemon ${TYRAS_NODEMON_ARGS}
    networks:
      be-nw:
  frontend:
    build:
      context: "${TYRAS_ROOT_DIR}/environment"
      dockerfile: "${TYRAS_ROOT_DIR}/environment/Dockerfile.node"
      args:
        NODE_VERSION: ${TYRAS_NODE_VERSION_FE}
    ports:
      - 127.0.0.1:4002:4002
    volumes:
      - "${TYRAS_ROOT_DIR}/frontend/:/tyras/code/:rw"
      - "${TYRAS_ROOT_DIR}/protocol/:/tyras/protocol/:ro"
      - "${TYRAS_ROOT_DIR}/environment/protocol/:/tyras/nodemon/protocol/:ro"
      # Libraries reference Git top-level tsconfig.json
      - "${TYRAS_ROOT_DIR}/tsconfig.json:/tyras/tsconfig.json:ro"
      # Installation necesseties
      - "${TYRAS_ROOT_DIR}/scripts/native-install.sh:/tyras/install.sh"
      - "${TYRAS_ROOT_DIR}/.eslintrc.library.cjs:/tyras/.eslintrc.library.cjs:ro"
      - "${TYRAS_ROOT_DIR}/tsconfig.library.json:/tyras/tsconfig.library.json:ro"
      - "${TYRAS_ROOT_DIR}/tsconfig.build.json:/tyras/tsconfig.build.json:ro"
    environment:
      # In deployment scenarios, this should be generated by the pipeline
      TYRAS_FE_CONFIG: |
        {
          "authentication": {
            "endpointOrRegion": "http://localhost:4000",
            "clientId": "abcdefghijklmnopqrstuvwxy"
          },
          "backend": "http://localhost:4001"
        }
    entrypoint:
      - sh
      - -c
      - |
        set -e

        cd /tyras
        export TYRAS_LIB_DIR=/tyras/code
        ./install.sh --cwd /tyras/code --frozen-lockfile
        cd /tyras/nodemon/protocol
        nodemon ${TYRAS_NODEMON_ARGS} &
        cd /tyras/code
        # This will be used by vite.config.ts to determine whether Chokidar polling-based HMR is needed
        export TYRAS_NODEMON_ARGS='${TYRAS_NODEMON_ARGS}'
        # Vite can't handle multi-string env vars yet, but perhaps in Vite4: https://github.com/vitejs/vite/pull/6783
        # So use jq to compact readable multi-line JSON string into one-liner
        echo 'VITE_TYRAS_FE_CONFIG='"$$(echo "$${TYRAS_FE_CONFIG}" | jq -cM .)" > .env
        yarn run dev --host 0.0.0.0 --port 4002
  user-auth:
    image: jagregory/cognito-local:3.21.1
    environment:
      PORT: 3999
      # DEBUG: 1
    expose:
      - 3999
    ports:
      - 127.0.0.1:4000:3999
    volumes:
      - "${TYRAS_ROOT_DIR}/environment/.data/auth/:/app/.cognito/:rw"
    networks:
      be-nw:
        aliases:
          - tyras-auth
  db:
    image: postgres:14-alpine
    environment:
      # These are for Postgres itself
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_pw
      # These are for initialization
      TYRAS_DB_DATABASE: tyras_db
      TYRAS_DB_BE_ROLENAME: tyras_be
      TYRAS_DB_BE_USERNAME: tyras_be_login
      TYRAS_DB_BE_PASSWORD: tyras_be_login_pw
    expose:
      - 5432
    # ports:
    #   - 127.0.0.1:5432:5432
    networks:
      be-nw:
        aliases:
          - tyras-db
    volumes:
      - "${TYRAS_ROOT_DIR}/environment/db/startup/:/docker-entrypoint-initdb.d/:ro"
      - "${TYRAS_ROOT_DIR}/db/migrations/:/migrations/:ro"

networks:
  be-nw:
