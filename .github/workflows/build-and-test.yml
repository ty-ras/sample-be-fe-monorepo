name: Build, test, and publish

on:
  workflow_call:
    inputs:
      fetch-depth:
        required: true
        type: number

jobs:
  build_and_test:
    strategy:
      matrix:
        dir: [ protocol, backend ]
    runs-on: ubuntu-latest
    name: Build and test ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - id: install
        name: Install dependencies of ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/install.sh '${{ matrix.dir }}' --frozen-lockfile

          if [[ '${{ matrix.dir }}' != 'protocol' ]]; then
            cp protocol/src/protocol.d.ts '${{ matrix.dir }}/src'
          fi

      - id: test
        name: Test ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/test.sh '${{ matrix.dir }}' coverage

      - id: lint
        name: Lint ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/lint.sh '${{ matrix.dir }}'

      # Run build *after* tests - since tests no longer require transpiled JS to run
      # We still want to run build to catch any TS error possibly lurking somewhere.
      - id: compile
        name: Compile ${{ matrix.dir }}
        shell: bash
        run: |
          set -e

          ./scripts/build.sh '${{ matrix.dir }}' ci

      # - id: coverage
      #   name: Upload coverage for '${{ matrix.dir }}'
      #   uses: codecov/codecov-action@v3
      #   with:
      #     flags: ${{ matrix.dir }}
      #     directory: ${{ matrix.dir }}

